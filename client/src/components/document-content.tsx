import { useEffect } from "react";
import { ScrollArea } from "@/components/ui/scroll-area";
import { renderMathInElement } from "@/lib/math-renderer";

export default function DocumentContent() {
  useEffect(() => {
    renderMathInElement();
  }, []);

  return (
    <div className="bg-card">
      <div className="max-w-4xl mx-auto p-8 content-scroll">
        <ScrollArea className="h-full">
          <article className="prose prose-lg max-w-none">
            {/* Document Title */}
            <header className="text-center mb-12">
              <h1 className="text-3xl font-georgia font-bold text-foreground mb-4">
                The Incompleteness of Deductive Logic: A Generalization of Gödel's Theorem
              </h1>
            </header>

            {/* Abstract */}
            <section id="abstract" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">Abstract</h2>
              <p className="text-muted-foreground leading-relaxed">
                This paper demonstrates that deductive logic is incomplete, in the precise sense that there exists no recursive definition of the class of all logical truths. By generalizing Gödel's incompleteness theorem, it is shown that the class of recursively defined logics is not itself recursively definable. The core result rests on a cardinality mismatch between recursive definitions and their power sets, echoing Cantor's diagonal argument. The conclusion is that no logic, understood as a formal system, can capture the entirety of logical truth.
              </p>
            </section>

            {/* Introduction */}
            <section id="introduction" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">1. Introduction and Framework</h2>
              <p className="text-muted-foreground leading-relaxed mb-4">
                We work in the context of classical first-order logic with equality, enriched by standard recursion theory. All sets and functions are assumed to be definable within ZFC set theory unless otherwise stated. A logic is formally defined as a recursively enumerable set of sentences <span className="math-inline">φ ∈ Σ*</span>, where <span className="math-inline">Σ</span> is a finite alphabet. Each such logic is generated by a pair <span className="math-inline">(S, Φ)</span>, where <span className="math-inline">S</span> is a finite base of axioms and <span className="math-inline">Φ</span> is a recursive inference operator. The deductive closure of <span className="math-inline">(S, Φ)</span> determines the logic's scope of provable truths.
              </p>
            </section>

            {/* Definitions */}
            <section id="definitions" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">2. Definitions</h2>
              
              <div className="bg-muted border-l-4 border-primary p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Definition 2.1 (Recursive Function):</p>
                <p className="text-muted-foreground">A function <span className="math-inline">f: ℕ → ℕ</span> is recursive if there exists a Turing machine <span className="math-inline">M</span> such that for all <span className="math-inline">n ∈ ℕ</span>, <span className="math-inline">M</span> halts on input <span className="math-inline">n</span> and outputs <span className="math-inline">f(n)</span>.</p>
              </div>

              <div className="bg-muted border-l-4 border-primary p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Definition 2.2 (Posterity of α with respect to Φ):</p>
                <p className="text-muted-foreground mb-2">Let <span className="math-inline">Φ</span> be a recursive operator on <span className="math-inline">Σ*</span>. Define <span className="math-inline">Post(α, Φ)</span> as the smallest set <span className="math-inline">k</span> such that:</p>
                <ol className="list-decimal list-inside text-muted-foreground space-y-1">
                  <li><span className="math-inline">α ∈ k</span>,</li>
                  <li><span className="math-inline">∀x ∈ Σ*</span>, if <span className="math-inline">∃y ∈ k</span> such that <span className="math-inline">Φ(y) = x</span>, then <span className="math-inline">x ∈ k</span>.</li>
                </ol>
              </div>

              <div className="bg-muted border-l-4 border-primary p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Definition 2.3 (Recursive Logic):</p>
                <p className="text-muted-foreground">A logic <span className="math-inline">L</span> is defined by a pair <span className="math-inline">(S, Φ)</span> with <span className="math-inline">S ⊆ Σ*</span> finite and <span className="math-inline">Φ</span> a recursive operator. The logic <span className="math-inline">L</span> consists of all sentences derivable from <span className="math-inline">S</span> under <span className="math-inline">Φ</span>.</p>
              </div>
            </section>

            {/* Lemmas and Theorems */}
            <section id="theorems" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">3. Lemmas and Theorems</h2>
              
              <div className="bg-blue-50 border-l-4 border-blue-500 p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Lemma 3.1 (Cantor):</p>
                <p className="text-muted-foreground mb-2"><span className="math-inline">|P(K)| > |K|</span> for any set <span className="math-inline">K</span>.</p>
                <p className="text-sm text-muted-foreground font-semibold">Proof Sketch:</p>
                <p className="text-sm text-muted-foreground">Assume <span className="math-inline">|P(K)| = |K|</span>. Then the diagonal subset of <span className="math-inline">K</span> cannot be in the image of any function <span className="math-inline">f: K → P(K)</span>, contradicting surjectivity. □</p>
              </div>

              <div className="bg-blue-50 border-l-4 border-blue-500 p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Lemma 3.2:</p>
                <p className="text-muted-foreground mb-2">There is no recursive definition of the real numbers <span className="math-inline">ℝ</span>.</p>
                <p className="text-sm text-muted-foreground font-semibold">Proof:</p>
                <p className="text-sm text-muted-foreground">Any recursive enumeration of rationals can be diagonalized to generate a real not in the list. □</p>
              </div>

              <div className="bg-amber-50 border-l-4 border-amber-500 p-6 mb-6">
                <p className="font-semibold text-foreground mb-2">Theorem 3.3:</p>
                <p className="text-muted-foreground mb-2">The class of all recursive definitions (<span className="math-inline">K</span>) is not recursively definable.</p>
                <p className="text-sm text-muted-foreground font-semibold">Proof:</p>
                <p className="text-sm text-muted-foreground">Assume <span className="math-inline">K</span> is recursively definable. By Lemma 3.1, <span className="math-inline">|P(K)| > |K|</span>, but any recursive definition of <span className="math-inline">K</span> would imply <span className="math-inline">P(K)</span> is also recursively enumerable, yielding <span className="math-inline">|P(K)| ≤ |K|</span>, a contradiction. □</p>
              </div>
            </section>

            {/* Philosophical Significance */}
            <section id="significance" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">4. Philosophical Significance</h2>
              <p className="text-muted-foreground leading-relaxed mb-4">
                Gödel's incompleteness theorem showed the limits of formal arithmetic. This paper extends that insight to logic itself. Any recursive system of logical truth generation (i.e., any formal logic) is inherently incomplete—not merely because of the limits of that system, but because the very class of such systems defies recursive definition.
              </p>
              <p className="text-muted-foreground leading-relaxed">
                This underscores a fundamental limit to mechanized reasoning: there is no algorithmic means to capture logical truth in its entirety. Formal systems can approximate logical truth but never exhaust it. The result provides a metatheoretic foundation for understanding the necessary incompleteness of any computational approach to logic.
              </p>
            </section>

            {/* Conclusion */}
            <section id="conclusion" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">5. Conclusion</h2>
              <p className="text-muted-foreground leading-relaxed">
                This paper generalizes Gödel's incompleteness result from arithmetic to deductive logic as such. By demonstrating that the class of all recursively defined logics is not recursively definable, it reveals the deeper reason for logical incompleteness: the cardinality mismatch between recursion and its own power set. No formal system, however broadly defined, can exhaust the space of logical truths. This result provides a metatheoretic capstone to Gödel's original insight. □
              </p>
            </section>

            {/* References */}
            <section id="references" className="mb-12">
              <h2 className="text-2xl font-georgia font-bold text-foreground mb-4">References</h2>
              <div className="space-y-3 text-sm text-muted-foreground">
                <p>Gödel, K. (1931). Über formal unentscheidbare Sätze der Principia Mathematica und verwandter Systeme I. <em>Monatshefte für Mathematik und Physik</em>, 38(1), 173–198.</p>
                <p>Turing, A. M. (1936). On computable numbers, with an application to the Entscheidungsproblem. <em>Proceedings of the London Mathematical Society</em>, 2(42), 230–265.</p>
                <p>Church, A. (1936). An unsolvable problem of elementary number theory. <em>American Journal of Mathematics</em>, 58(2), 345–363.</p>
                <p>Tarski, A. (1936). Der Wahrheitsbegriff in den formalisierten Sprachen. <em>Studia Philosophica</em>, 1, 261–405.</p>
              </div>
            </section>
          </article>
        </ScrollArea>
      </div>
    </div>
  );
}
